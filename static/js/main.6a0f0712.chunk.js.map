{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterBy","TodoList","todos","selectedTodo","onButtonClick","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","setFilteredTodos","useState","All","completedFilter","setCompletedFilter","query","setQuery","useEffect","filteredTodosBySelect","Active","filter","Completed","normalizedQuery","toLowerCase","trim","filteredByQuery","includes","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onCloseButtonClick","userId","user","setUser","isLoading","setIsLoading","getUser","foundUser","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","setSelectedTodo","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"iLAQKA,E,mECEQC,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,aACAC,EAHuC,EAGvCA,cAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GACT,IAAQC,EAAyBD,EAAzBC,GAAIC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAEnB,OACE,qBACE,UAAQ,OACRL,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BG,IAC9B,oBAAIH,UAAU,eAAd,SACGK,GACC,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWM,IAAW,CACpB,mBAAoBD,EACpB,mBAAoBA,IAHxB,SAMGD,MAIL,oBAAIJ,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAAcG,IAJ/B,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWM,IAAW,MAAO,CAC9B,SAAUH,KAAE,OAAKL,QAAL,IAAKA,OAAL,EAAKA,EAAcK,IAC/B,eAAgBA,KAAE,OAAKL,QAAL,IAAKA,OAAL,EAAKA,EAAcK,gBA/BxCA,a,SD7BZR,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KAME,IAAMc,EAA8B,SAAC,GAAiC,IAA/BZ,EAA8B,EAA9BA,MAAOa,EAAuB,EAAvBA,iBACnD,EAA8CC,mBAAShB,EAASiB,KAAhE,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACR,IAAMC,EAAyB,WAC7B,OAAQL,GACN,KAAKlB,EAASwB,OACZ,OAAOtB,EAAMuB,QAAO,qBAAGf,aAEzB,KAAKV,EAAS0B,UACZ,OAAOxB,EAAMuB,QAAO,qBAAGf,aAEzB,QACE,OAAOR,GATkB,GAazByB,EAAkBP,EAAMQ,cAAcC,OAEtCC,EAAkBP,EAAsBE,QAC5C,YAGE,OAHa,EAAZhB,MAC6BmB,cAEPG,SAASJ,MAIpCZ,EAAiBe,KAChB,CAACV,EAAOF,IAoBX,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACR2B,MAAOd,EACPe,SAzBiB,SAACC,GAG1B,OAFkBA,EAAMC,OAAhBH,OAGN,KAAKhC,EAASwB,OACZL,EAAmBnB,EAASwB,QAC5B,MAEF,KAAKxB,EAAS0B,UACZP,EAAmBnB,EAAS0B,WAC5B,MAEF,QACEP,EAAmBnB,EAASiB,OAS1B,UAKE,wBAAQe,MAAOhC,EAASiB,IAAxB,iBACA,wBAAQe,MAAOhC,EAASwB,OAAxB,oBACA,wBAAQQ,MAAOhC,EAAS0B,UAAxB,8BAKN,oBAAGrB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACV+B,YAAY,YACZJ,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAWb,EAASa,EAAMC,OAAOH,UAE7C,sBAAM3B,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGde,GACC,sBAAMf,UAAU,gBAAgBgC,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACR1B,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMQ,EAAS,gBEhGzBkB,G,MAAmB,kBAC9B,qBAAKlC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASmC,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAAC,GAAkC,IAAhC5C,EAA+B,EAA/BA,KAAM6C,EAAyB,EAAzBA,mBAE/C5C,EAIED,EAJFC,GACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,UACA2C,EACE9C,EADF8C,OAEF,EAAwBrC,mBAAsB,MAA9C,mBAAOsC,EAAP,KAAaC,EAAb,KACA,EAAkCvC,oBAAS,GAA3C,mBAAOwC,EAAP,KAAkBC,EAAlB,KAQA,OANAnC,qBAAU,YDKW,SAAC+B,GAAD,OAAoBb,EAAG,iBAAiBa,KCJ3DK,CAAQL,GAAQN,MAAK,SAAAY,GAAS,OAAIJ,EAAQI,MAE1Cb,YAAW,kBAAMW,GAAa,KAAQ,OACrC,IAGD,sBAAKpD,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdmD,EACC,cAAC,EAAD,IAEA,sBAAKnD,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYG,KAIZ,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,kBAAMuC,UAInB,sBAAK/C,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGI,IAGH,oBAAGJ,UAAU,QAAQ,UAAQ,aAA7B,UACGK,EACG,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAGuD,KAAI,wBAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAMO,OAAzB,gBACGP,QADH,IACGA,OADH,EACGA,EAAMQ,oBCpDVC,EAAgB,WAC3B,MAA0B/C,mBAAiB,IAA3C,mBAAOd,EAAP,KAAc8D,EAAd,KACA,EAAwChD,mBAAiB,IAAzD,mBAAOiD,EAAP,KAAqBC,EAArB,KACA,EAAkClD,oBAAS,GAA3C,mBAAOwC,EAAP,KAAkBC,EAAlB,KACA,EAAwCzC,mBAAsB,MAA9D,mBAAOb,EAAP,KAAqBgE,EAArB,KAEA7C,qBAAU,WFKkBkB,EAAY,UEHnCO,MAAK,SAAAqB,GACJJ,EAASI,GACTF,EAAgBE,GAChBX,GAAa,QAEhB,IAUH,OACE,qCACE,qBAAKpD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYH,MAAOA,EAAOa,iBAAkBmD,MAG9C,qBAAK7D,UAAU,QAAf,SACGmD,EACG,cAAC,EAAD,IAEA,cAAC,EAAD,CACEtD,MAAO+D,EACP9D,aAAcA,EACdC,cA1BG,SAACG,GACpB4D,EAAgB5D,eAiCI,OAAjBJ,GACC,cAAC,EAAD,CACEI,KAAMJ,EACNiD,mBAjCkB,WACxBe,EAAgB,aC9BpBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6a0f0712.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setFilteredTodos: (newTodos: Todo[]) => void;\n};\n\nenum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setFilteredTodos }) => {\n  const [completedFilter, setCompletedFilter] = useState(FilterBy.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const filteredTodosBySelect = (() => {\n      switch (completedFilter) {\n        case FilterBy.Active:\n          return todos.filter(({ completed }) => !completed);\n\n        case FilterBy.Completed:\n          return todos.filter(({ completed }) => completed);\n\n        default:\n          return todos;\n      }\n    })();\n\n    const normalizedQuery = query.toLowerCase().trim();\n\n    const filteredByQuery = filteredTodosBySelect.filter(\n      ({ title }) => {\n        const normalizedTitle = title.toLowerCase();\n\n        return normalizedTitle.includes(normalizedQuery);\n      },\n    );\n\n    setFilteredTodos(filteredByQuery);\n  }, [query, completedFilter]);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    switch (value) {\n      case FilterBy.Active:\n        setCompletedFilter(FilterBy.Active);\n        break;\n\n      case FilterBy.Completed:\n        setCompletedFilter(FilterBy.Completed);\n        break;\n\n      default:\n        setCompletedFilter(FilterBy.All);\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={completedFilter}\n            onChange={handleSelectChange}\n          >\n            <option value={FilterBy.All}>All</option>\n            <option value={FilterBy.Active}>Active</option>\n            <option value={FilterBy.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onButtonClick: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onButtonClick,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onButtonClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': id !== selectedTodo?.id,\n                    'fa-eye-slash': id === selectedTodo?.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onCloseButtonClick: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onCloseButtonClick }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(userId).then(foundUser => setUser(foundUser));\n\n    setTimeout(() => setIsLoading(false), 300);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onCloseButtonClick()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setVisibleTodos(todosFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const handleSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const resetSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter todos={todos} setFilteredTodos={setVisibleTodos} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onButtonClick={handleSelect}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseButtonClick={resetSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}